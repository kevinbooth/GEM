@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Event";
    ApplicationUser owner = ViewData["Owner"] as ApplicationUser;
    Event item = ViewData["Event"] as Event;
    IEnumerable<Event_User> eventUsers = ViewData["EventUsers"] as IEnumerable<Event_User>;
}

@using Microsoft.AspNetCore.Identity
@using GEM.Models


<!-- WE NEED TO TIE DATA HERE WITH THE ID-->

<div class="body-content container">
    <h2>@item.Title</h2>
    <hr />
    <h4>Description:</h4>
    <p>@item.Description</p>

    <h4>Private:</h4>
    <p>@item.IsPrivate</p>

    <h4>Location:</h4>
    <p>@item.Location</p>

    <h4>Date and Time:</h4>
    <p>@item.DateAndTime</p>

    <h4>Number of Attendees:</h4>
    <p>@eventUsers.Count()</p>

    <h4>Owner Contact:</h4>
    <p>@owner.Email</p>

    @if (SignInManager.IsSignedIn(User) && owner.Id != UserManager.GetUserId(User)) //Syntax example originated from _LoginPartial.cshtml in Views/Shared
    {
        <a href="@Url.Action("Thanks", new { item.Id, userId = UserManager.GetUserId(User) })" class="btn btn-primary">Attend Event</a>
    }
</div>

